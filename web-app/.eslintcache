[{"/home/redalegzali/Desktop/MovieApp/web-app/src/index.js":"1","/home/redalegzali/Desktop/MovieApp/web-app/src/reportWebVitals.js":"2","/home/redalegzali/Desktop/MovieApp/web-app/src/Movie/index.js":"3","/home/redalegzali/Desktop/MovieApp/web-app/src/Header/index.js":"4","/home/redalegzali/Desktop/MovieApp/web-app/src/Sidebar/index.js":"5","/home/redalegzali/Desktop/MovieApp/web-app/src/Header/Header.js":"6","/home/redalegzali/Desktop/MovieApp/web-app/src/Movie/Movie.js":"7","/home/redalegzali/Desktop/MovieApp/web-app/src/Sidebar/Sidebar.js":"8"},{"size":1561,"mtime":1612882217396,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1612882217406,"results":"11","hashOfConfig":"10"},{"size":35,"mtime":1612882217396,"results":"12","hashOfConfig":"10"},{"size":36,"mtime":1612882217416,"results":"13","hashOfConfig":"10"},{"size":37,"mtime":1612882217386,"results":"14","hashOfConfig":"10"},{"size":414,"mtime":1612882217426,"results":"15","hashOfConfig":"10"},{"size":4439,"mtime":1612882320696,"results":"16","hashOfConfig":"10"},{"size":7914,"mtime":1612882217396,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1y6q1n5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/home/redalegzali/Desktop/MovieApp/web-app/src/index.js",[],["37","38"],"/home/redalegzali/Desktop/MovieApp/web-app/src/reportWebVitals.js",[],"/home/redalegzali/Desktop/MovieApp/web-app/src/Movie/index.js",[],"/home/redalegzali/Desktop/MovieApp/web-app/src/Header/index.js",[],"/home/redalegzali/Desktop/MovieApp/web-app/src/Sidebar/index.js",[],"/home/redalegzali/Desktop/MovieApp/web-app/src/Header/Header.js",[],"/home/redalegzali/Desktop/MovieApp/web-app/src/Movie/Movie.js",["39"],"import React, { Component } from \"react\";\nimport './Movie.css';\n\n\n\n\n\n//<img src={image} style={{height:'100%',width:'100%',objectFit:'cover'}}></img>\n\n//const Movies2Component = Movies.map((movie) => <Movie key={movie.id} title={movie.title} rating={movie.rating} image={movie.image} />);\n//{Movies.content.body.map(block => block.title)}\n//{Object.keys(Movies.content.body).length}\nclass Movie extends Component {\n\n  \n \n  editMovie(Mcid, category_list){\n\n    //display of the Pop up div with movie clicked info \n\n    document.getElementById(\"wrapper\").style.opacity = \"1\";\n    document.getElementById(\"wrapper\").style.visibility = \"visible\";\n\n    document.getElementById(\"movImg\").src = `${process.env.REACT_APP_API_URL}/img/`+Mcid.image;\n\n    document.getElementById(\"movTitle\").value = Mcid.title;\n\n    document.getElementById(\"movRating\").value = Mcid.rating;\n\n    document.getElementById('modify').value =  Mcid.id; // You change the id of the element modify, so when you reclick it can't find it's id :/\n\n\n\n    category_list.unshift(\"<option name='\"+Mcid.category+\"'>\"+Mcid.category +\"</option>\"); //Make the clicked movie's category the first in the list\n\n\n\n    category_list = category_list.filter((item, index) => category_list.indexOf(item) === index); //Filter the category list duplicates\n    \n    document.getElementById(\"movCat\").innerHTML = category_list;\n\n    // Sending the Update to the API in the index.html <script> tag when button is clicked\n\n\n    \n\n\n\n\n  }\n\n  deleteMovie(Mcid){\n\n\n    if (window.confirm('Are you sure you want to delete ' + Mcid.title + ' from your Movie list ?')) {\n      document.getElementById(Mcid.id).style.opacity = \"0\";\n      document.getElementById(Mcid.id).style.display = \"none\";\n\n\t\t\tfetch(`${process.env.REACT_APP_API_URL}/movies/`+Mcid.id, {\n\t\t\t\tmethod: 'DELETE'\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n        \n        //UPLOAD IMAGE DONE, WE NEED TO POST SEND MOVIE INFO TO API NOW\n        console.log(data); //the previous POST returns the uploaded file name\n\t\t\t})\n\t\t\t.catch(error => {\n        console.error(error);\n\t\t\t})\n\n      \n      //Send request to API to remove Movie from DB containing ID = MCid\n      console.log(document.getElementById(\"MC\"+Mcid.id));\n    } else {\n      // Do nothing!\n      console.log('Thing was not saved to the database.');\n    }\n  }\n\n\n\t\t\n\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n    }\n  }\n\n\n\n  componentDidMount(){\n    fetch(`${process.env.REACT_APP_API_URL}/movies`)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        })\n      })\n  }\n  \n\n  render() {\n\n    var { isLoaded, items} = this.state;\n    console.log(process.env.REACT_APP_API_URL);\n    if(!isLoaded){\n      document.getElementById(\"staticheadcontainer\").innerHTML = \"\"; //hide Searchbar\n      return <React.Fragment>\n        <div class=\"row justify-content-center\" style={{height:\"50px\",color:\"white\",marginTop:\"340px\"}}>\n        <h1>Seems like your Back-End server is offline</h1>\n        </div>\n          <div class=\"row justify-content-center\" style={{height:\"500px\"}}>\n          \n          <img src=\"https://i.pinimg.com/originals/21/83/f3/2183f3dd15b25d1bfc923199e13f3ef6.png\" style={{height:\"500px\",width:\"500px\",marginTop:\"190px\"}} />\n\n          </div> \n      </React.Fragment>\n    }\n    else{\n\n      //const category_list = {items}.items.category;\n      //console.log(category_list);\n\n      // Keep Our Categories saved in a List \n      let category_list = []\n      items.forEach(item => category_list.push(\"<option name='\"+item.category+\"'>\"+item.category +\"</option>\"));\n      \n\n\n      return  <React.Fragment>\n        \n        {items.map(items => (\n\n\n          <div key={items.id} style={{backgroundImage:`url(${process.env.REACT_APP_API_URL}/img/${items.image})`}} class={items.category + \" MoviePoster\"} id={items.id}>\n            \n            <div class=\"Ratings\">{items.rating}</div> \n            <i class=\"fas fa-times Mdelete\" id={\"D\"+items.id} onClick={this.deleteMovie.bind(this, items)}></i>\n              <div class=\"MovieContainer\" id={\"MC\"+items.id} onClick={this.editMovie.bind(this, items,category_list)}  > \n                  <i class=\"fas fa-edit Medit\"></i>\n              </div>\n          \n          </div>\n          \n\n      ))} \n      \n      </React.Fragment>\n\n\n    }\n    \n  }\n}\n\nexport default Movie;\n","/home/redalegzali/Desktop/MovieApp/web-app/src/Sidebar/Sidebar.js",["40"],"import React, { Component } from \"react\";\nimport './Sidebar.css';\n\nclass Sidebar extends Component {\n\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n    }\n  }\n/*\n  addmovie(e){\n    e.preventDefault();\n    fetch(\"image.php\", {\n      method: \"POST\",\n      body: new FormData(document.getElementById('addMov'))\n    }).then((res) => {\n      if (res.ok){\n        alert('we got the answer!');\n      } \n      else{\n        console.log(res.status);\n        alert(\"FAILURE\");\n        console.log(res.statusText);\n        console.log(res.type);\n      }\n  });\n}\n*/\n\ndeleteAllMovies(){\n\n  if(window.confirm(\"Are you sure you want to delete ALL movies ?\")){\n\n    fetch(`${process.env.REACT_APP_API_URL}/movies`, {\n      method: 'DELETE'\n    })\n    .then(response => response.json())\n    .then(data => { console.log(data); })\n    .catch(error => { console.log(error); })\n\n  }\n\n    \n\n\n}\n\n  delCategory(event){\n    const id = event.target.id.replace('DelC','');\n\n    if(window.confirm(\"Are you sure you want to delete ALL movies ?\")){\n      fetch(`${process.env.REACT_APP_API_URL}/categories/`+id, {\n        method: 'DELETE'\n      })\n      .then(response => response.json())\n      .then(data => { console.log(data); })\n      .catch(error => { console.log(error); })\n    }\n  }\n\n  addmovie(event) {\n\n    console.log(\"Uploading movie initiated\");\n    \n    event.preventDefault();\n    const files = event.target.file.files\n    const title = event.target.title.value\n    const rating = event.target.rating.value\n    const category = event.target.categorie.value\n\n    const formAdd = new FormData()\n    formAdd.append('title', title)\n    formAdd.append('rating', rating)\n    formAdd.append('category',category)\n\n    const post_data = (formData) => {\n      console.log('WE ARE GOING TO POST THIS FORM !');\n      console.log(formAdd.get('title'));\n        console.log(formAdd.get('rating'));\n        console.log(formAdd.get('category'));\n      fetch(`${process.env.REACT_APP_API_URL}/movies`, {\n        method: 'POST',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(data => {console.log('FORM UPLOADEEEEDD !'); console.log(data); })\n      .catch(error => {console.log('FORM FUCKING FAILED !'); console.log(error); })\n    };\n\n    const upload_file = (formData) => {\n      console.log(\"Uploading movie...\");\n\t  fetch(`${process.env.REACT_APP_API_URL}/upload`, {\n\t    method: 'POST',\n\t\tbody: formData\n\t  })\n\t  .then(response => response.json())\n\t  .then(data => data.filename)\n      .then(filename => {\n        formAdd.append('image',filename);\n        console.log(\"Movie uploaded, Going to Post Data from for form :\");\n        console.log(formAdd.get('title'));\n        console.log(formAdd.get('rating'));\n        console.log(formAdd.get('category'));\n        post_data(formAdd);\n        console.log('MOVIE UPLOADED !');\n        \n      })\n\t  .catch(error => { console.error(error) })\n    };\n\n    if (event.target.file.files.length != 0) {\n      let file = new FormData();\n\t  file.append('file', files[0]);\n      upload_file(file);\n    }\n    else {\n      formAdd.append('image','');\n      post_data(formAdd);\n    }\n\n  }\n\n  componentDidMount(){\n    fetch(`${process.env.REACT_APP_API_URL}/categories`)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        })\n      })\n  }\n\n  \n\n  render() {\n\n\n\n    var { isLoaded, items} = this.state;\n\n    if(!isLoaded){\n      return <div>Loading...</div>\n    }\n    else{\n     \n      return <React.Fragment>\n\n        <h4 href=\"#\" id=\"sideh4\">Filter <i class=\"fas fa-sort\"></i></h4>\n\n        {items.map(items => (\n\n        <div class=\"form-check catego\" style={{textAlign: \"center\",paddingTop: \"20px\",paddingBottom: \"20px\"}}>\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"C\"+items.id}  style={{left: \"50px\"}} />\n        <label class=\"form-check-label\" for={\"C\"+items.id} style={{color: \"white\",cursor: \"pointer\"}}>\n          {items.name}\n        </label>\n        <i class=\"fas fa-times Cdelete\" id={\"DelC\"+items.id} key={items.id} onClick={this.delCategory} ></i>\n        </div>\n\n        ))}\n\n        <hr id=\"sidehr\" />\n\n        <div class=\"btn-group dropright\">\n\n          <button type=\"button\" id=\"sidebutton\" class=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Add Movie\n          </button>\n          \n          <div class=\"dropdown-menu\" >\n\n          <form class=\"px-4 py-3\" id=\"addMov\" onSubmit={this.addmovie}>\n                <div class=\"form-group\">\n                  <label for=\"movTitle\">Movie Title</label>\n                  <input name=\"title\" type=\"text\" class=\"form-control\" id=\"createTitle\" />\n                </div>\n\n                <div class=\"form-group\" >\n                  <label for=\"movRating\">Ratings</label>\n                  <input name=\"rating\" class=\"form-control\" type=\"number\" step=\"0.1\" id=\"createRatings\" defaultValue=\"5\"  />\n                </div>\n\n                <div class=\"form-group\" >\n                  <label for=\"movCat\">Categorie</label>\n                  <input name=\"categorie\" class=\"form-control\" type=\"text\"  id=\"createCategorie\" defaultValue=\"Action\"  />\n                </div>\n\n\n                \n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlFile1\">Cover Image</label>\n                    <input name=\"file\" type=\"file\" class=\"form-control-file\" id=\"createImage\" />\n                  </div>\n                \n                \n                <button type=\"submit\" class=\"btn btn-primary\" >Add</button>\n              </form>\n            \n          </div>\n        </div>\n\n        <button type=\"button\" id=\"deleteallbtn\" onClick={this.deleteAllMovies} class=\"btn btn-danger\">Clear Movies</button>\n\n      </React.Fragment>\n\n\n    }\n\n    \n    /*\n    const items=[]\n\n\n    for (let number of Object.keys(Categories)){\n      let Name = Categories[number].Name;\n      let id =  Categories[number].id;\n      let Cid = \"C\"+id;\n    \n\n\n        items.push(\n          <div class=\"form-check catego\" style={{textAlign: \"center\",paddingTop: \"20px\",paddingBottom: \"20px\"}}>\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id={Cid} style={{left: \"50px\"}} />\n            <label class=\"form-check-label\" for={Cid} style={{color: \"white\",cursor: \"pointer\"}}>\n              {Name}\n            </label>\n          </div>)\n\n    }\n\n    return  <React.Fragment>\n\n        <h4 href=\"#\" id=\"sideh4\">Filter <i class=\"fas fa-sort\"></i></h4>\n\n        {items}\n\n        <hr id=\"sidehr\" />\n\n        <div class=\"btn-group dropright\">\n\n          <button type=\"button\" id=\"sidebutton\" class=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Add Movie\n          </button>\n          \n          <div class=\"dropdown-menu\" >\n\n          <form class=\"px-4 py-3\" id=\"addMov\">\n                <div class=\"form-group\">\n                  <label for=\"movTitle\">Movie Title</label>\n                  <input type=\"text\" class=\"form-control\" id=\"createTitle\"  />\n                </div>\n                <div class=\"form-group\" >\n                  <label for=\"movRating\">Ratings</label>\n                  <input class=\"form-control\" type=\"number\" step=\"0.1\" id=\"createRatings\" defaultValue=\"5\"  />\n                </div>\n                \n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlFile1\">Cover Image</label>\n                    <input type=\"file\" class=\"form-control-file\" id=\"createImage\" />\n                  </div>\n                \n                \n                <button type=\"submit\" class=\"btn btn-primary\" onClick=\"addmovie()\">Add</button>\n              </form>\n            \n          </div>\n        </div>\n      </React.Fragment>\n    */\n  }\n}\n\nexport default Sidebar;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":118,"column":11,"nodeType":"47","endLine":118,"endColumn":158},{"ruleId":"48","severity":1,"message":"49","line":116,"column":40,"nodeType":"50","messageId":"51","endLine":116,"endColumn":42},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]