[{"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\index.js":"1","D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\reportWebVitals.js":"2","D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Movie\\index.js":"3","D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Header\\index.js":"4","D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Sidebar\\index.js":"5","D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Movie\\Movie.js":"6","D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Header\\Header.js":"7","D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Sidebar\\Sidebar.js":"8"},{"size":1597,"mtime":1612469198305,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":35,"mtime":1612369862682,"results":"12","hashOfConfig":"10"},{"size":36,"mtime":1611685764819,"results":"13","hashOfConfig":"10"},{"size":37,"mtime":1611953207477,"results":"14","hashOfConfig":"10"},{"size":4203,"mtime":1612470622413,"results":"15","hashOfConfig":"10"},{"size":414,"mtime":1612293463318,"results":"16","hashOfConfig":"10"},{"size":6310,"mtime":1612383207017,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5g928",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\index.js",["36"],"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\reportWebVitals.js",[],["37","38"],"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Movie\\index.js",[],"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Header\\index.js",[],"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Sidebar\\index.js",[],"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Movie\\Movie.js",["39"],"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Header\\Header.js",[],"D:\\Users\\Samy-PC\\Desktop\\Hello_React\\hello_react\\src\\Sidebar\\Sidebar.js",["40"],"import React, { Component } from \"react\";\nimport './Sidebar.css';\nimport Image from '../image.php'\n\n\n\nclass Sidebar extends Component {\n\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n    }\n  }\n/*\n  addmovie(e){\n    e.preventDefault();\n    fetch(\"image.php\", {\n      method: \"POST\",\n      body: new FormData(document.getElementById('addMov'))\n    }).then((res) => {\n      if (res.ok){\n        alert('we got the answer!');\n      } \n      else{\n        console.log(res.status);\n        alert(\"FAILURE\");\n        console.log(res.statusText);\n        console.log(res.type);\n      }\n  });\n}\n*/\n\n  addmovie(event) {\n    event.preventDefault();\n    const files = event.target.file.files\n    const title = event.target.title.value\n    const rating = event.target.rating.value\n    const category = event.target.categorie.value\n    //event.target.NAMEOFINPUTFORIMAGE.files\n\t\t\tconst formImg = new FormData()\n\t\t\tformImg.append('file', files[0])\n\t\t\tfetch('http://localhost:5000/upload', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: formImg\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n        \n        //UPLOAD IMAGE DONE, WE NEED TO POST SEND MOVIE INFO TO API NOW\n        const image_name = data.filename //the previous POST returns the uploaded file name\n\n        const formAdd = new FormData()\n        formAdd.append('title', title)\n        formAdd.append('rating', rating)\n        formAdd.append('image', image_name)\n        formAdd.append('category',category)\n\n        fetch('http://localhost:5000/movies', {\n          method: 'POST',\n          body: formAdd\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n        })\n\n\n\t\t\t})\n\t\t\t.catch(error => {\n        console.error(error)\n        console.log(formImg)\n\t\t\t})\n\n  }\n\n  componentDidMount(){\n    fetch('http://127.0.0.1:5000/categories')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        })\n      })\n  }\n\n  \n\n  render() {\n\n\n\n    var { isLoaded, items} = this.state;\n\n    if(!isLoaded){\n      return <div>Loading...</div>\n    }\n    else{\n     \n      return <React.Fragment>\n\n        <h4 href=\"#\" id=\"sideh4\">Filter <i class=\"fas fa-sort\"></i></h4>\n\n        {items.map(items => (\n\n        <div class=\"form-check catego\" style={{textAlign: \"center\",paddingTop: \"20px\",paddingBottom: \"20px\"}}>\n        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"C\"+items.id} style={{left: \"50px\"}} />\n        <label class=\"form-check-label\" for={\"C\"+items.id} style={{color: \"white\",cursor: \"pointer\"}}>\n          {items.name}\n        </label>\n        </div>\n\n        ))}\n\n        <hr id=\"sidehr\" />\n\n        <div class=\"btn-group dropright\">\n\n          <button type=\"button\" id=\"sidebutton\" class=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Add Movie\n          </button>\n          \n          <div class=\"dropdown-menu\" >\n\n          <form class=\"px-4 py-3\" id=\"addMov\" onSubmit={this.addmovie}>\n                <div class=\"form-group\">\n                  <label for=\"movTitle\">Movie Title</label>\n                  <input name=\"title\" type=\"text\" class=\"form-control\" id=\"createTitle\"  />\n                </div>\n\n                <div class=\"form-group\" >\n                  <label for=\"movRating\">Ratings</label>\n                  <input name=\"rating\" class=\"form-control\" type=\"number\" step=\"0.1\" id=\"createRatings\" defaultValue=\"5\"  />\n                </div>\n\n                <div class=\"form-group\" >\n                  <label for=\"movCat\">Categorie</label>\n                  <input name=\"categorie\" class=\"form-control\" type=\"text\"  id=\"createCategorie\" defaultValue=\"Action\"  />\n                </div>\n\n\n                \n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlFile1\">Cover Image</label>\n                    <input name=\"file\" type=\"file\" class=\"form-control-file\" id=\"createImage\" />\n                  </div>\n                \n                \n                <button type=\"submit\" class=\"btn btn-primary\" >Add</button>\n              </form>\n            \n          </div>\n        </div>\n\n      </React.Fragment>\n\n\n    }\n\n    \n    /*\n    const items=[]\n\n\n    for (let number of Object.keys(Categories)){\n      let Name = Categories[number].Name;\n      let id =  Categories[number].id;\n      let Cid = \"C\"+id;\n    \n\n\n        items.push(\n          <div class=\"form-check catego\" style={{textAlign: \"center\",paddingTop: \"20px\",paddingBottom: \"20px\"}}>\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id={Cid} style={{left: \"50px\"}} />\n            <label class=\"form-check-label\" for={Cid} style={{color: \"white\",cursor: \"pointer\"}}>\n              {Name}\n            </label>\n          </div>)\n\n    }\n\n    return  <React.Fragment>\n\n        <h4 href=\"#\" id=\"sideh4\">Filter <i class=\"fas fa-sort\"></i></h4>\n\n        {items}\n\n        <hr id=\"sidehr\" />\n\n        <div class=\"btn-group dropright\">\n\n          <button type=\"button\" id=\"sidebutton\" class=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Add Movie\n          </button>\n          \n          <div class=\"dropdown-menu\" >\n\n          <form class=\"px-4 py-3\" id=\"addMov\">\n                <div class=\"form-group\">\n                  <label for=\"movTitle\">Movie Title</label>\n                  <input type=\"text\" class=\"form-control\" id=\"createTitle\"  />\n                </div>\n                <div class=\"form-group\" >\n                  <label for=\"movRating\">Ratings</label>\n                  <input class=\"form-control\" type=\"number\" step=\"0.1\" id=\"createRatings\" defaultValue=\"5\"  />\n                </div>\n                \n                  <div class=\"form-group\">\n                    <label for=\"exampleFormControlFile1\">Cover Image</label>\n                    <input type=\"file\" class=\"form-control-file\" id=\"createImage\" />\n                  </div>\n                \n                \n                <button type=\"submit\" class=\"btn btn-primary\" onClick=\"addmovie()\">Add</button>\n              </form>\n            \n          </div>\n        </div>\n      </React.Fragment>\n    */\n  }\n}\n\nexport default Sidebar;\n",{"ruleId":"41","severity":1,"message":"42","line":9,"column":8,"nodeType":"43","messageId":"44","endLine":9,"endColumn":13},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":118,"column":11,"nodeType":"51","endLine":118,"endColumn":158},{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":13},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]